apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "ademo.fullname" . }}
  labels:
    app: {{ template "ademo.name" . }}
    chart: {{ template "ademo.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
#  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "ademo.name" . }}
      release: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "ademo.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            requests:
              cpu: {{ .Values.resourcerequests.cpu }}
          terminationGracePeriodSeconds: 30
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
#          lifecycle:
#            preStop:
#              exec:
#                command: [
#                  # Gracefully shutdown nginx
#                  "/usr/sbin/nginx", "-s", "quit"
#                ]
{{- toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
